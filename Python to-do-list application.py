# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13CELtiTSkMMQMx3tj1I-yQTPeA1Xt6j9
"""

class TodoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append({"task": task, "completed": False})
        print("Task added successfully.")

    def view_tasks(self):
        if self.tasks:
            print("Your to-do list:")
            for index, task in enumerate(self.tasks, start=1):
                print(f"{index}. {'[X]' if task['completed'] else '[ ]'} {task['task']}")
        else:
            print("Your to-do list is empty.")

    def delete_task(self, task_index):
        try:
            del self.tasks[task_index - 1]
            print("Task deleted successfully.")
        except IndexError:
            print("Invalid task index.")

    def complete_task(self, task_index):
        try:
            self.tasks[task_index - 1]["completed"] = True
            print("Task marked as completed.")
        except IndexError:
            print("Invalid task index.")

def main():
    todo_list = TodoList()

    while True:
        print("\nChoose an option:")
        print("1. Add task")
        print("2. View tasks")
        print("3. Delete task")
        print("4. Mark task as completed")
        print("5. Quit")

        choice = input("Enter your choice: ")

        if choice == '1':
            task = input("Enter the task: ")
            todo_list.add_task(task)
        elif choice == '2':
            todo_list.view_tasks()
        elif choice == '3':
            task_index = int(input("Enter the task index to delete: "))
            todo_list.delete_task(task_index)
        elif choice == '4':
            task_index = int(input("Enter the task index to mark as completed: "))
            todo_list.complete_task(task_index)
        elif choice == '5':
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please enter a valid option.")

if __name__ == "__main__":
    main()